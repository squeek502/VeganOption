plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'net.neoforged.gradle.userdev' version '7.0.43'
	id 'net.neoforged.gradle.mixin' version '7.0.43'
}

if (version == "unspecified")
	version = "0.2.0"
if (System.getenv("BUILD_NUMBER") != null)
	version += (version ? "+" : "") + "${System.getenv("BUILD_NUMBER")}"
if (System.getenv("GIT_COMMIT") != null)
	version += (version ? "." : "") + "${System.getenv("GIT_COMMIT").take(5)}"

repositories {
	mavenLocal()
	maven {
		// JEI
		url "https://maven.blamejared.com/"
	}
	maven {
		// JEI fallback
		url "https://modmaven.dev"
	}
}

base {
	archivesName = project.projectDir.name + "-mc1.20.2"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

runs {
	configureEach {
		systemProperty 'forge.logging.markers', 'REGISTRIES'
		systemProperty 'forge.logging.console.level', 'debug'

		modSource project.sourceSets.main
	}

	client {
		systemProperty 'forge.enabledGameTestNamespaces', 'veganoption'
	}

	server {
		systemProperty 'forge.enabledGameTestNamespaces', 'veganoption'
		programArgument '--nogui'
	}

	gameTestServer {
		systemProperty 'forge.enabledGameTestNamespaces', 'veganoption'
	}

	data {
		programArguments.addAll '--mod', 'veganoption', '--all', '--output', file('generated/resources/').getAbsolutePath(),
				'--existing', file('resources/').getAbsolutePath()
	}
}

minecraft.accessTransformers.file rootProject.file('resources/META-INF/accesstransformer.cfg')

mixin {
	config 'mixins.veganoption.json'
}

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.java.srcDirs += 'apis'
sourceSets.main.resources.srcDirs += 'resources'
sourceSets.main.resources.srcDirs += 'generated/resources'
sourceSets.test.java.srcDirs += 'tests'

def forgeVersion = "20.2.44-beta"
def jeiVersion = "16.0.0.28"
 
dependencies {
	implementation "net.neoforged:neoforge:${forgeVersion}"
//	Awaiting a NeoForge version...
//	compileOnly "mezz.jei:jei-1.20.2-common-api:${jeiVersion}"
//	compileOnly "mezz.jei:jei-1.20.2-forge-api:${jeiVersion}"
//	runtimeOnly "mezz.jei:jei-1.20.2-forge:${jeiVersion}"
}

tasks.withType(ProcessResources).configureEach {
	var replaceProperties = [
			minecraft_version: "1.20.2", minecraft_version_range: "1.20.2",
			neo_version: forgeVersion, neo_version_range: forgeVersion,
			loader_version_range: "[1,)",
			mod_id: "veganoption",
			mod_name: "The Vegan Option",
			mod_license: "Public Domain",
			mod_version: project.version,
			mod_authors: "squeek502, SatanicSanta",
			mod_description: "Adds vegan alternatives for the various animal products used in Minecraft.",
	]
	inputs.properties replaceProperties

	filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
		expand replaceProperties + [project: project]
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}